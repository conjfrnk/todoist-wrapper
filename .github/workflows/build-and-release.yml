name: Build and Release Latest Tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # optional daily check

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code (with all tags)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Important so we have access to all tags

      - name: Install GitHub CLI (if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Find the newest v* tag
        id: find_latest
        run: |
          # 1) Get the "latest" v* tag (descending sort, then take the first line)
          LATEST_TAG=$(git tag --list 'v*' | sort -r | head -n 1)

          if [ -z "$LATEST_TAG" ]; then
            echo "No v* tags found in the repository. Skipping."
            echo "latest-tag=" >> $GITHUB_OUTPUT
            exit 0
          fi

          # 2) Check if a release already exists for this tag
          RELEASE_EXISTS=$(gh release view "$LATEST_TAG" --json url --jq .url 2>/dev/null || true)
          if [ -n "$RELEASE_EXISTS" ]; then
            echo "Latest tag $LATEST_TAG already has a release. Skipping."
            echo "latest-tag=" >> $GITHUB_OUTPUT
            exit 0
          fi

          # 3) Otherwise, weâ€™ll build this new tag
          echo "Newest tag without a release: $LATEST_TAG"
          echo "latest-tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Build and release latest tag
        if: ${{ steps.find_latest.outputs.latest-tag != '' }}
        run: |
          LATEST_TAG='${{ steps.find_latest.outputs.latest-tag }}'
          echo "==== Building for tag '$LATEST_TAG' ===="

          # 1) Check out that specific tag
          git checkout "$LATEST_TAG"

          # 2) Install dependencies & build
          npm ci
          npm run package-linux

          # 3) Zip up artifacts
          zip -r bin/todoist-wrapper-linux-x64.zip bin/todoist-wrapper-linux-x64/

          # 4) Create a GitHub release for this tag
          gh release create "$LATEST_TAG" ./bin/todoist-wrapper-linux-x64.zip \
            --notes "Automated release for $LATEST_TAG" \
            --title "Release $LATEST_TAG"
